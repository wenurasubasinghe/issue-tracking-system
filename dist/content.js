(()=>{"use strict";const e="http://localhost:3010";let t,n=!0;const o={Lunch:1,Meeting:2};function c(){setTimeout((()=>{const o=document.querySelector("#partial-discussion-sidebar");if(o){const c=o.querySelector(".sidebar-assignee");if(c){const o=document.createElement("div");o.classList.add("discussion-sidebar-item","timetracker-buttons");const l=document.createElement("h3");l.textContent="Time Tracker",l.classList.add("discussion-sidebar-heading","discussion-sidebar-toggle"),o.appendChild(l);const i=document.createElement("button");i.classList.add("btn","btn-sm","ev-btn-start","btn-primary","mr-1"),i.textContent="Start Timer",i.addEventListener("click",(()=>s(o))),o.appendChild(i);const a=document.createElement("button");a.classList.add("btn","btn-sm","btn-danger","mr-1"),a.textContent="Stop Time",a.addEventListener("click",(()=>function(o){fetch(`${e}/extension/employee-tracker`,{method:"POST",headers:{"Content-Type":"application/json","Access-Key":`${localStorage.getItem("accessKey")}`},body:JSON.stringify({action:"END_ACTIVITY",activityTypeId:localStorage.getItem("selectedActivityTypeId"),employeeId:null,id:null,state:null,timestamp:null})}).then((e=>e.json())).then((e=>{const n=e;clearInterval(t),t=null;const c=o.querySelector(".ev-btn-start");c&&(c.textContent="Start Timer"),function(e){console.log("Time entry saved:",e)}(n)})).catch((e=>{console.error("Error stopping timer:",e)})),n=!0}(o))),o.appendChild(a);const r=document.createElement("button");r.classList.add("btn","btn-sm","ev-edit-time-anchor"),r.textContent="Enter Key",r.addEventListener("click",(()=>{fetch(chrome.runtime.getURL("enter-key-modal.html")).then((e=>e.text())).then((e=>{const t=document.createElement("div");t.innerHTML=e,document.body.appendChild(t);const n=document.getElementById("accessKeyModal"),o=document.getElementById("accessKeyClose"),c=document.getElementById("confirmAccessKey"),l=document.getElementById("accessKeyInput");o.addEventListener("click",(()=>{n.style.display="none"})),n.style.display="block",c.addEventListener("click",(()=>{const e=l.value.trim();""!==e?(localStorage.setItem("accessKey",e),n.style.display="none",alert("Access key saved successfully")):alert("Please enter your access key.")}))})).catch((e=>{alert("Error loading modal"),console.log("Error loading modal",e)}))})),o.appendChild(r),c.parentNode.insertBefore(o,c.nextSibling)}}}),500)}document.querySelector(".gh-header-show")&&c();let l=window.location.href;function s(c){n?function(e){fetch(chrome.runtime.getURL("activity-modal.html")).then((e=>e.text())).then((t=>{const c=document.createElement("div");c.innerHTML=t,document.body.appendChild(c);const l=document.getElementById("activityModal"),i=l.querySelector(".close"),a=document.getElementById("selectActivityBtn"),r=document.getElementById("activityTypeSelect"),d=document.createElement("option");d.value="",d.textContent="Select option",r.appendChild(d),Object.entries(o).forEach((([e,t])=>{const n=document.createElement("option");n.value=t,n.textContent=e,r.appendChild(n)})),l.style.display="block",i.addEventListener("click",(()=>{l.style.display="none",document.body.removeChild(c)})),a.addEventListener("click",(()=>{const t=document.getElementById("activityTypeSelect").value;localStorage.setItem("selectedActivityTypeId",t),l.style.display="none",document.body.removeChild(c),n=!1,s(e)}))})).catch((e=>{console.error("Error loading activity modal:",e)}))}(c):t?console.log("Timer is already running."):fetch(`${e}/extension/employee-tracker`,{method:"POST",headers:{"Content-Type":"application/json","Access-Key":`${localStorage.getItem("accessKey")}`},body:JSON.stringify({action:"START_ACTIVITY",activityTypeId:localStorage.getItem("selectedActivityTypeId"),employeeId:null,id:null,state:null,timestamp:null})}).then((e=>e.json())).then((e=>{localStorage.setItem("entryData",e),function(e){const n=e.querySelector(".ev-btn-start");if(n){let e=0;t=setInterval((()=>{e++;const t=`${Math.floor(e/60)}:${(e%60).toString().padStart(2,"0")}`;n.textContent=`Timer: ${t}`}),1e3)}else console.error("Start Timer button not found")}(c)})).catch((e=>{console.error("Error starting timer:",e),n=!0}))}new MutationObserver((()=>{const e=window.location.href;e!==l&&(l=e,c())})).observe(document.body,{childList:!0,subtree:!0})})();